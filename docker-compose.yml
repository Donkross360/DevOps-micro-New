version: '3.8'

# Frontend Selection:
# Use --profile react for React frontend (default)
# Use --profile html for HTML frontend
# Example: docker-compose --profile html up

services:
  frontend-react:
    build: ./frontend-react
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://auth:4000
      - REACT_APP_BACKEND_URL=http://backend:5000
    volumes:
      - ./frontend-react:/app
      - /app/node_modules
    depends_on:
      - backend
      - auth
    stdin_open: true
    tty: true
    profiles: ["react"]

  frontend-html:
    build: 
      context: ./frontend-html
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./frontend-html:/usr/share/nginx/html
    depends_on:
      - backend
      - auth
    profiles: ["html"]

  # Default services (always run)
  backend:
    image: backend:latest
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - auth

  backend:
    image: backend:latest
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - auth
      - user
      - payment

  auth:
    image: auth:latest
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./auth:/app

  user:
    image: user:latest
    ports:
      - "6000:6000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./user:/app

  payment:
    image: payment:latest
    ports:
      - "7000:7000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./payment:/app

  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:
